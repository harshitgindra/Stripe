@model Stripe.Models.User_Profile
@{
    ViewBag.Title = "Profile";
    Layout = "~/Views/Shared/_SchoolDirectorLayout.cshtml";
}

<h2>School Director Profile</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User_Profile</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.Hidden("userProfile_ID", Convert.ToInt32(Session["loginid"]))

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_First_Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_First_Name)
                @Html.ValidationMessageFor(model => model.userProfile_First_Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_Last_Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_Last_Name)
                @Html.ValidationMessageFor(model => model.userProfile_Last_Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_Email)
                @Html.ValidationMessageFor(model => model.userProfile_Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_Phone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_Phone)
                @Html.ValidationMessageFor(model => model.userProfile_Phone)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_Street, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_Street)
                @Html.ValidationMessageFor(model => model.userProfile_Street)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_City)
                @Html.ValidationMessageFor(model => model.userProfile_City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_State, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_State)
                @Html.ValidationMessageFor(model => model.userProfile_State)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_Zip, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_Zip)
                @Html.ValidationMessageFor(model => model.userProfile_Zip)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.userProfile_Background_Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userProfile_Background_Description)
                @Html.ValidationMessageFor(model => model.userProfile_Background_Description)
            </div>
        </div>

        @Html.Hidden("Login_login_ID", Convert.ToInt32(Session["loginid"]))
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

